import { Alert, Platform } from 'react-native';
import { API_CONFIG } from './constants';
import { getDevelopmentApiUrl, getProductionApiUrl, isDevelopment } from './network';
import { getUserData, getCredentials } from './storage';

/**
 * Shows debug information about the current environment
 */
export const showDebugInfo = () => {
  const debugInfo = `
üîß INFORMACI√ìN DE DEBUG

üåê Configuraci√≥n de Red:
‚Ä¢ API URL: ${API_CONFIG.BASE_URL}
‚Ä¢ Timeout: ${API_CONFIG.TIMEOUT}ms
‚Ä¢ Modo: ${isDevelopment() ? 'Desarrollo' : 'Producci√≥n'}

üì± Dispositivo:
‚Ä¢ Platform: ${Platform.OS}
‚Ä¢ Environment: ${__DEV__ ? 'Development' : 'Production'}

üîç URLs por Entorno:
‚Ä¢ Dev URL: ${getDevelopmentApiUrl()}
‚Ä¢ Prod URL: ${getProductionApiUrl()}

‚ö†Ô∏è Soluci√≥n de Problemas:
‚Ä¢ Ambos dispositivos en misma WiFi
‚Ä¢ Backend corriendo en IP correcta
‚Ä¢ Sin firewall bloqueando puerto 8080
‚Ä¢ Usar "Test de Conectividad" para verificar
  `;

  Alert.alert('Debug Info', debugInfo);
};

/**
 * Shows connectivity test information
 */
export const showConnectivityInfo = () => {
  const info = `
Test de Conectividad:

1Ô∏è‚É£ Desde tu dispositivo, abre el navegador
2Ô∏è‚É£ Navega a: ${API_CONFIG.BASE_URL}
3Ô∏è‚É£ Deber√≠as ver una respuesta del servidor

Si no funciona, verifica:
‚Ä¢ La IP de tu m√°quina: ifconfig | grep "inet "
‚Ä¢ Que el servidor est√© corriendo: lsof -i :8080
‚Ä¢ Firewall/antivirus no est√© bloqueando
  `;

  Alert.alert('Test de Conectividad', info);
};

/**
 * Shows current user data stored locally (for debugging)
 */
export const showStoredUserData = async () => {
  try {
    const userData = await getUserData();
    const credentials = await getCredentials();
    
    const debugInfo = `
üóÇÔ∏è DATOS ALMACENADOS

üë§ Credenciales:
‚Ä¢ Username: ${credentials?.username || 'No encontrado'}
‚Ä¢ Password: ${credentials?.password ? '‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢' : 'No encontrado'}

üì± Datos de Usuario:
‚Ä¢ ID: ${userData?.id || 'No encontrado'}
‚Ä¢ Email: ${userData?.email || 'No encontrado'}
‚Ä¢ Tel√©fono: ${userData?.phoneNumber || 'Vac√≠o'}
‚Ä¢ Email suscripci√≥n: ${userData?.subscriptionEmail || 'No encontrado'}
‚Ä¢ Rol: ${userData?.role || 'No encontrado'}
‚Ä¢ Fecha registro: ${userData?.createdAt ? new Date(userData.createdAt).toLocaleDateString() : 'No encontrado'}
‚Ä¢ √öltimo login: ${userData?.lastLogin ? new Date(userData.lastLogin).toLocaleDateString() : 'No encontrado'}
    `;

    Alert.alert('Datos Almacenados', debugInfo);
  } catch (error) {
    Alert.alert('Error', 'No se pudieron cargar los datos almacenados: ' + error.message);
  }
};
